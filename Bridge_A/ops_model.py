import openseespy.opensees as ops
import numpy as np
import os


D3 = 1.2342617966488048


def main(model_input_dict):
    ops.wipe()
    ops.model('BasicBuilder', '-ndm', 3, '-ndf', 6)
    ops.geomTransf('Corotational', 1000, 0, 0, 1)
    ops.geomTransf('Corotational', 4000, 0, 0, 1)
    ops.geomTransf('Corotational', 2000, -0.5446390350150271, 0.838670567945424, 0.)
    ops.geomTransf('Corotational', 3000, 0.838670567945424, 0.5446390350150271, 0.)
    ops.uniaxialMaterial('Concrete01', 1001, -8.438902632269224, -0.0028296772213088676, -1.687780526453845, -0.0629141365433386)
    ops.uniaxialMaterial('Concrete01', 2001, -6.5, -0.0021795371673297504, -1.3, -0.005884823378103793)
    ops.uniaxialMaterial('Elastic', 4001, 6019019.069751658)
    ops.uniaxialMaterial('Elastic', 5001, 3654760417.191347)
    ops.uniaxialMaterial('Concrete01', 1002, -8.438902632269224, -0.0028296772213088676, -1.687780526453845, -0.0629141365433386)
    ops.uniaxialMaterial('Concrete01', 2002, -6.5, -0.0021795371673297504, -1.3, -0.005884823378103793)
    ops.uniaxialMaterial('Elastic', 4002, 6019019.069751658)
    ops.uniaxialMaterial('Elastic', 5002, 3654760417.191347)
    ops.uniaxialMaterial('Concrete01', 1003, -8.438902632269224, -0.0028296772213088676, -1.687780526453845, -0.0629141365433386)
    ops.uniaxialMaterial('Concrete01', 2003, -6.5, -0.0021795371673297504, -1.3, -0.005884823378103793)
    ops.uniaxialMaterial('Elastic', 4003, 6019019.069751658)
    ops.uniaxialMaterial('Elastic', 5003, 3654760417.191347)
    ops.uniaxialMaterial('SteelMPF', 3001, 69.144, 69.144, 29200.0, 0.01, 0.01, 20., 0.925, 0.15)
    ops.uniaxialMaterial('SteelMPF', 3002, 69.144, 69.144, 29200.0, 0.01, 0.01, 20., 0.925, 0.15)
    ops.uniaxialMaterial('SteelMPF', 3003, 69.144, 69.144, 29200.0, 0.01, 0.01, 20., 0.925, 0.15)
    ops.uniaxialMaterial('SteelMPF', 3004, 69.144, 69.144, 29200.0, 0.01, 0.01, 20., 0.925, 0.15)
    ops.uniaxialMaterial('SteelMPF', 3005, 69.144, 69.144, 29200.0, 0.01, 0.01, 20., 0.925, 0.15)
    ops.uniaxialMaterial('SteelMPF', 3006, 69.144, 69.144, 29200.0, 0.01, 0.01, 20., 0.925, 0.15)
    ops.uniaxialMaterial('SteelMPF', 3007, 69.144, 69.144, 29200.0, 0.01, 0.01, 20., 0.925, 0.15)
    ops.uniaxialMaterial('SteelMPF', 3008, 69.144, 69.144, 29200.0, 0.01, 0.01, 20., 0.925, 0.15)
    ops.uniaxialMaterial('SteelMPF', 3009, 69.144, 69.144, 29200.0, 0.01, 0.01, 20., 0.925, 0.15)
    ops.uniaxialMaterial('SteelMPF', 3010, 69.144, 69.144, 29200.0, 0.01, 0.01, 20., 0.925, 0.15)
    ops.uniaxialMaterial('SteelMPF', 3011, 69.144, 69.144, 29200.0, 0.01, 0.01, 20., 0.925, 0.15)
    ops.uniaxialMaterial('SteelMPF', 3012, 69.144, 69.144, 29200.0, 0.01, 0.01, 20., 0.925, 0.15)
    ops.uniaxialMaterial('Concrete02', 8001, -1438.5942588677867, -1.2342617966488048, 0., -5.427757966424975, 0.99, 0.1438594258867787, 1.0)
    ops.uniaxialMaterial('Concrete02', 8002, -1438.5942588677867, -1.2342617966488048, 0., -5.427757966424975, 0.99, 0.1438594258867787, 1.0)
    ops.uniaxialMaterial('Concrete02', 8003, -1438.5942588677867, -1.2342617966488048, 0., -5.427757966424975, 0.99, 0.1438594258867787, 1.0)
    ops.uniaxialMaterial('Concrete02', 8004, -1438.5942588677867, -1.2342617966488048, 0., -5.427757966424975, 0.99, 0.1438594258867787, 1.0)
    ops.uniaxialMaterial('HyperbolicGapMaterial', 101, 331.1392201687725, 331.1392201687725, 1.0, -92.92413457549526, -1.0)
    ops.uniaxialMaterial('HyperbolicGapMaterial', 102, 189.27224748903157, 189.27224748903157, 1.0, -53.1134904168498, -1.0)
    ops.uniaxialMaterial('HyperbolicGapMaterial', 103, 142.61038039684055, 142.61038039684055, 1.0, -40.01925888786122, -1.0)
    ops.uniaxialMaterial('HyperbolicGapMaterial', 104, 108.14832669087575, 108.14832669087575, 1.0, -30.348533340193182, -1.0)
    ops.uniaxialMaterial('HyperbolicGapMaterial', 105, 82.08442356424439, 82.08442356424439, 1.0, -23.034492917958225, -1.0)
    ops.uniaxialMaterial('HyperbolicGapMaterial', 106, 331.1392201687725, 331.1392201687725, 1.0, -92.92413457549526, -1.0)
    ops.uniaxialMaterial('HyperbolicGapMaterial', 107, 189.27224748903157, 189.27224748903157, 1.0, -53.1134904168498, -1.0)
    ops.uniaxialMaterial('HyperbolicGapMaterial', 108, 142.61038039684055, 142.61038039684055, 1.0, -40.01925888786122, -1.0)
    ops.uniaxialMaterial('HyperbolicGapMaterial', 109, 108.14832669087575, 108.14832669087575, 1.0, -30.348533340193182, -1.0)
    ops.uniaxialMaterial('HyperbolicGapMaterial', 110, 82.08442356424439, 82.08442356424439, 1.0, -23.034492917958225, -1.0)
    ops.uniaxialMaterial('Elastic', 20000, 1e-10)
    ops.uniaxialMaterial('Elastic', 203, 1000000.0)
    ops.section('Fiber', 20001, '-torsion', 5001)
    ops.patch('circ', 2001, 132, 2, 0., 0., 30.24654000098859, 33.06, 0.0, 360.0)
    ops.patch('circ', 1001, 121, 5, 0., 0., 22.28692421125475, 30.24654000098859, 0.0, 360.0)
    ops.patch('circ', 1001, 89, 4, 0., 0., 15.919231579467679, 22.28692421125475, 0.0, 360.0)
    ops.patch('circ', 1001, 64, 3, 0., 0., 11.143462105627375, 15.919231579467679, 0.0, 360.0)
    ops.patch('circ', 1001, 44, 2, 0., 0., 7.9596157897338395, 11.143462105627375, 0.0, 360.0)
    ops.patch('circ', 1001, 32, 2, 0., 0., 4.775769473840303, 7.9596157897338395, 0.0, 360.0)
    ops.patch('circ', 1001, 19, 1, 0., 0., 3.1838463158935357, 4.775769473840303, 0.0, 360.0)
    ops.patch('circ', 1001, 13, 1, 0., 0., 1.5919231579467679, 3.1838463158935357, 0.0, 360.0)
    ops.patch('circ', 1001, 6, 1, 0., 0., 0.0, 1.5919231579467679, 0.0, 360.0)
    ops.layer('circ', 3001, 6, 2.8613720136675442, 0., 0., 29.292180006018135, 0.0, 75.0)
    ops.layer('circ', 3002, 6, 2.8613720136675442, 0., 0., 29.292180006018135, 90.0, 165.0)
    ops.layer('circ', 3003, 6, 2.8613720136675442, 0., 0., 29.292180006018135, 180.0, 255.0)
    ops.layer('circ', 3004, 6, 2.8613720136675442, 0., 0., 29.292180006018135, 270.0, 345.0)
    ops.section('Aggregator', 2001, 4001, 'Vy', 4001, 'Vz', '-section', 20001)
    ops.section('Fiber', 20002, '-torsion', 5002)
    ops.patch('circ', 2002, 132, 2, 0., 0., 30.24654000098859, 33.06, 0.0, 360.0)
    ops.patch('circ', 1002, 121, 5, 0., 0., 22.28692421125475, 30.24654000098859, 0.0, 360.0)
    ops.patch('circ', 1002, 89, 4, 0., 0., 15.919231579467679, 22.28692421125475, 0.0, 360.0)
    ops.patch('circ', 1002, 64, 3, 0., 0., 11.143462105627375, 15.919231579467679, 0.0, 360.0)
    ops.patch('circ', 1002, 44, 2, 0., 0., 7.9596157897338395, 11.143462105627375, 0.0, 360.0)
    ops.patch('circ', 1002, 32, 2, 0., 0., 4.775769473840303, 7.9596157897338395, 0.0, 360.0)
    ops.patch('circ', 1002, 19, 1, 0., 0., 3.1838463158935357, 4.775769473840303, 0.0, 360.0)
    ops.patch('circ', 1002, 13, 1, 0., 0., 1.5919231579467679, 3.1838463158935357, 0.0, 360.0)
    ops.patch('circ', 1002, 6, 1, 0., 0., 0.0, 1.5919231579467679, 0.0, 360.0)
    ops.layer('circ', 3005, 6, 2.8613720136675442, 0., 0., 29.292180006018135, 0.0, 75.0)
    ops.layer('circ', 3006, 6, 2.8613720136675442, 0., 0., 29.292180006018135, 90.0, 165.0)
    ops.layer('circ', 3007, 6, 2.8613720136675442, 0., 0., 29.292180006018135, 180.0, 255.0)
    ops.layer('circ', 3008, 6, 2.8613720136675442, 0., 0., 29.292180006018135, 270.0, 345.0)
    ops.section('Aggregator', 2002, 4002, 'Vy', 4002, 'Vz', '-section', 20002)
    ops.section('Fiber', 20003, '-torsion', 5003)
    ops.patch('circ', 2003, 132, 2, 0., 0., 30.24654000098859, 33.06, 0.0, 360.0)
    ops.patch('circ', 1003, 121, 5, 0., 0., 22.28692421125475, 30.24654000098859, 0.0, 360.0)
    ops.patch('circ', 1003, 89, 4, 0., 0., 15.919231579467679, 22.28692421125475, 0.0, 360.0)
    ops.patch('circ', 1003, 64, 3, 0., 0., 11.143462105627375, 15.919231579467679, 0.0, 360.0)
    ops.patch('circ', 1003, 44, 2, 0., 0., 7.9596157897338395, 11.143462105627375, 0.0, 360.0)
    ops.patch('circ', 1003, 32, 2, 0., 0., 4.775769473840303, 7.9596157897338395, 0.0, 360.0)
    ops.patch('circ', 1003, 19, 1, 0., 0., 3.1838463158935357, 4.775769473840303, 0.0, 360.0)
    ops.patch('circ', 1003, 13, 1, 0., 0., 1.5919231579467679, 3.1838463158935357, 0.0, 360.0)
    ops.patch('circ', 1003, 6, 1, 0., 0., 0.0, 1.5919231579467679, 0.0, 360.0)
    ops.layer('circ', 3009, 6, 2.8613720136675442, 0., 0., 29.292180006018135, 0.0, 75.0)
    ops.layer('circ', 3010, 6, 2.8613720136675442, 0., 0., 29.292180006018135, 90.0, 165.0)
    ops.layer('circ', 3011, 6, 2.8613720136675442, 0., 0., 29.292180006018135, 180.0, 255.0)
    ops.layer('circ', 3012, 6, 2.8613720136675442, 0., 0., 29.292180006018135, 270.0, 345.0)
    ops.section('Aggregator', 2003, 4003, 'Vy', 4003, 'Vz', '-section', 20003)
    ops.node(100, 0, 0., 364.76)
    ops.node(101, 130.296, 0., 364.76)
    ops.node(102, 260.592, 0., 364.76)
    ops.node(103, 390.888, 0., 364.76)
    ops.node(104, 521.184, 0., 364.76)
    ops.node(105, 651.48, 0., 364.76)
    ops.node(106, 781.7760000000001, 0., 364.76)
    ops.node(107, 912.0720000000001, 0., 364.76)
    ops.node(108, 1042.3680000000002, 0., 364.76)
    ops.node(109, 1172.6640000000002, 0., 364.76)
    ops.node(200, 1302.96, 0., 364.76)
    ops.node(201, 1437.144, 0., 364.76)
    ops.node(202, 1571.328, 0., 364.76)
    ops.node(203, 1705.512, 0., 364.76)
    ops.node(204, 1839.696, 0., 364.76)
    ops.node(205, 1973.8799999999999, 0., 364.76)
    ops.node(206, 2108.064, 0., 364.76)
    ops.node(207, 2242.248, 0., 364.76)
    ops.node(208, 2376.4320000000002, 0., 364.76)
    ops.node(209, 2510.6160000000004, 0., 364.76)
    ops.node(300, 2644.8, 0., 364.76)
    ops.element('elasticBeamColumn', 101, 100, 101, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 102, 101, 102, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 103, 102, 103, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 104, 103, 104, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 105, 104, 105, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 106, 105, 106, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 107, 106, 107, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 108, 107, 108, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 109, 108, 109, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 110, 109, 200, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 201, 200, 201, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 202, 201, 202, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 203, 202, 203, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 204, 203, 204, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 205, 204, 205, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 206, 205, 206, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 207, 206, 207, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 208, 207, 208, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 209, 208, 209, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.element('elasticBeamColumn', 210, 209, 300, 14046.624000000002, 4262.043088800002, 1775.8512870000009, 7080141.312, 3739281.4080000003, 78753254.4, 1000)
    ops.node(2001, 1302.96, 0.0, 0.0)
    ops.node(2002, 1302.96, 0.0, 335.0)
    ops.beamIntegration('UserDefined', 2001, 8, 2001, 2002, 2002, 2002, 2002, 2002, 2002, 2003, 0, 0.06413, 0.20415, 0.39535, 0.60465, 0.79585, 0.93587, 1, 0.017857, 0.10535, 0.17056, 0.20623, 0.20623, 0.17056, 0.10535, 0.017857)
    ops.element('forceBeamColumn', 2001, 2001, 2002, 2000, 2001, '-iter', 50, 1e-12)
    ops.element('elasticBeamColumn', 2002, 2002, 200, 1., 10.e10, 10.e10, 1., 1., 1., 3000)
    ops.node(1100, 42.284227208276306, -65.112, 364.76)
    ops.node(1200, -42.284227208276306, 65.112, 364.76)
    ops.node(1300, 84.56845441655261, -130.224, 364.76)
    ops.node(1400, -84.56845441655261, 130.224, 364.76)
    ops.node(1500, 105.71056802069079, -162.78, 364.76)
    ops.node(1600, -105.71056802069079, 162.78, 364.76)
    ops.node(1101, 42.284227208276306, -65.112, 364.76)
    ops.node(1201, -42.284227208276306, 65.112, 364.76)
    ops.node(1301, 84.56845441655261, -130.224, 364.76)
    ops.node(1401, -84.56845441655261, 130.224, 364.76)
    ops.node(1501, 105.71056802069079, -162.78, 364.76)
    ops.node(1601, -105.71056802069079, 162.78, 364.76)
    ops.node(1001, 0.0, 0.0, 364.76)
    ops.node(3100, 2687.0842272082764, -65.112, 364.76)
    ops.node(3200, 2602.515772791724, 65.112, 364.76)
    ops.node(3300, 2729.3684544165526, -130.224, 364.76)
    ops.node(3400, 2560.2315455834478, 130.224, 364.76)
    ops.node(3500, 2750.510568020691, -162.78, 364.76)
    ops.node(3600, 2539.089431979309, 162.78, 364.76)
    ops.node(3101, 2687.0842272082764, -65.112, 364.76)
    ops.node(3201, 2602.515772791724, 65.112, 364.76)
    ops.node(3301, 2729.3684544165526, -130.224, 364.76)
    ops.node(3401, 2560.2315455834478, 130.224, 364.76)
    ops.node(3501, 2750.510568020691, -162.78, 364.76)
    ops.node(3601, 2539.089431979309, 162.78, 364.76)
    ops.node(3001, 2644.8, 0.0, 364.76)
    ops.element('elasticBeamColumn', 1100, 1100, 100, 1., 10.e10, 10.e10, 1., 1., 1., 4000)
    ops.element('elasticBeamColumn', 1200, 1200, 100, 1., 10.e10, 10.e10, 1., 1., 1., 4000)
    ops.element('elasticBeamColumn', 1300, 1300, 1100, 1., 10.e10, 10.e10, 1., 1., 1., 4000)
    ops.element('elasticBeamColumn', 1400, 1400, 1200, 1., 10.e10, 10.e10, 1., 1., 1., 4000)
    ops.element('elasticBeamColumn', 1500, 1500, 1300, 1., 10.e10, 10.e10, 1., 1., 1., 4000)
    ops.element('elasticBeamColumn', 1600, 1600, 1400, 1., 10.e10, 10.e10, 1., 1., 1., 4000)
    ops.element('elasticBeamColumn', 3100, 3100, 300, 1., 10.e10, 10.e10, 1., 1., 1., 4000)
    ops.element('elasticBeamColumn', 3200, 3200, 300, 1., 10.e10, 10.e10, 1., 1., 1., 4000)
    ops.element('elasticBeamColumn', 3300, 3300, 3100, 1., 10.e10, 10.e10, 1., 1., 1., 4000)
    ops.element('elasticBeamColumn', 3400, 3400, 3200, 1., 10.e10, 10.e10, 1., 1., 1., 4000)
    ops.element('elasticBeamColumn', 3500, 3500, 3300, 1., 10.e10, 10.e10, 1., 1., 1., 4000)
    ops.element('elasticBeamColumn', 3600, 3600, 3400, 1., 10.e10, 10.e10, 1., 1., 1., 4000)
    ops.element('zeroLength', 1301, 1301, 1300, '-mat', 105, '-dir', 1, '-doRayleigh', 0, '-orient', 0.838670567945424, 0.5446390350150271, 0., 0., 0., 1.)
    ops.element('zeroLength', 1101, 1101, 1100, '-mat', 104, '-dir', 1, '-doRayleigh', 0, '-orient', 0.838670567945424, 0.5446390350150271, 0., 0., 0., 1.)
    ops.element('zeroLength', 1001, 1001, 100, '-mat', 103, '-dir', 1, '-doRayleigh', 0, '-orient', 0.838670567945424, 0.5446390350150271, 0., 0., 0., 1.)
    ops.element('zeroLength', 1201, 1201, 1200, '-mat', 102, '-dir', 1, '-doRayleigh', 0, '-orient', 0.838670567945424, 0.5446390350150271, 0., 0., 0., 1.)
    ops.element('zeroLength', 1401, 1401, 1400, '-mat', 101, '-dir', 1, '-doRayleigh', 0, '-orient', 0.838670567945424, 0.5446390350150271, 0., 0., 0., 1.)
    ops.element('elastomericBearingPlasticity', 1303, 1301, 1300, 6.544760751059965, 5.582801165602332, 0.1, 0.0, 3.0, '-P', 203, '-T', 20000, '-My', 20000, '-Mz', 20000, '-orient', 0., 0., 1., 1., 0., 0., '-doRayleigh', 0)
    ops.element('elastomericBearingPlasticity', 1103, 1101, 1100, 6.544760751059965, 5.582801165602332, 0.1, 0.0, 3.0, '-P', 203, '-T', 20000, '-My', 20000, '-Mz', 20000, '-orient', 0., 0., 1., 1., 0., 0., '-doRayleigh', 0)
    ops.element('elastomericBearingPlasticity', 1003, 1001, 100, 6.544760751059965, 5.582801165602332, 0.1, 0.0, 3.0, '-P', 203, '-T', 20000, '-My', 20000, '-Mz', 20000, '-orient', 0., 0., 1., 1., 0., 0., '-doRayleigh', 0)
    ops.element('elastomericBearingPlasticity', 1203, 1201, 1200, 6.544760751059965, 5.582801165602332, 0.1, 0.0, 3.0, '-P', 203, '-T', 20000, '-My', 20000, '-Mz', 20000, '-orient', 0., 0., 1., 1., 0., 0., '-doRayleigh', 0)
    ops.element('elastomericBearingPlasticity', 1403, 1401, 1400, 6.544760751059965, 5.582801165602332, 0.1, 0.0, 3.0, '-P', 203, '-T', 20000, '-My', 20000, '-Mz', 20000, '-orient', 0., 0., 1., 1., 0., 0., '-doRayleigh', 0)
    ops.element('zeroLength', 3301, 3301, 3300, '-mat', 106, '-dir', 1, '-doRayleigh', 0, '-orient', -0.838670567945424, -0.5446390350150271, 0., 0., 0., 1.)
    ops.element('zeroLength', 3101, 3101, 3100, '-mat', 107, '-dir', 1, '-doRayleigh', 0, '-orient', -0.838670567945424, -0.5446390350150271, 0., 0., 0., 1.)
    ops.element('zeroLength', 3001, 3001, 300, '-mat', 108, '-dir', 1, '-doRayleigh', 0, '-orient', -0.838670567945424, -0.5446390350150271, 0., 0., 0., 1.)
    ops.element('zeroLength', 3201, 3201, 3200, '-mat', 109, '-dir', 1, '-doRayleigh', 0, '-orient', -0.838670567945424, -0.5446390350150271, 0., 0., 0., 1.)
    ops.element('zeroLength', 3401, 3401, 3400, '-mat', 110, '-dir', 1, '-doRayleigh', 0, '-orient', -0.838670567945424, -0.5446390350150271, 0., 0., 0., 1.)
    ops.element('elastomericBearingPlasticity', 3303, 3301, 3300, 6.544760751059965, 5.582801165602332, 0.1, 0.0, 3.0, '-P', 203, '-T', 20000, '-My', 20000, '-Mz', 20000, '-orient', 0., 0., 1., 1., 0., 0., '-doRayleigh', 0)
    ops.element('elastomericBearingPlasticity', 3103, 3101, 3100, 6.544760751059965, 5.582801165602332, 0.1, 0.0, 3.0, '-P', 203, '-T', 20000, '-My', 20000, '-Mz', 20000, '-orient', 0., 0., 1., 1., 0., 0., '-doRayleigh', 0)
    ops.element('elastomericBearingPlasticity', 3003, 3001, 300, 6.544760751059965, 5.582801165602332, 0.1, 0.0, 3.0, '-P', 203, '-T', 20000, '-My', 20000, '-Mz', 20000, '-orient', 0., 0., 1., 1., 0., 0., '-doRayleigh', 0)
    ops.element('elastomericBearingPlasticity', 3203, 3201, 3200, 6.544760751059965, 5.582801165602332, 0.1, 0.0, 3.0, '-P', 203, '-T', 20000, '-My', 20000, '-Mz', 20000, '-orient', 0., 0., 1., 1., 0., 0., '-doRayleigh', 0)
    ops.element('elastomericBearingPlasticity', 3403, 3401, 3400, 6.544760751059965, 5.582801165602332, 0.1, 0.0, 3.0, '-P', 203, '-T', 20000, '-My', 20000, '-Mz', 20000, '-orient', 0., 0., 1., 1., 0., 0., '-doRayleigh', 0)
    ops.element('zeroLength', 1501, 1501, 1500, '-mat', 8001, '-dir', 2, '-doRayleigh', 0, '-orient', 1, 0, 0, 0, 1, 0)
    ops.element('zeroLength', 1601, 1601, 1600, '-mat', 8002, '-dir', 2, '-doRayleigh', 0, '-orient', -1, 0, 0, 0, -1, 0)
    ops.element('zeroLength', 3501, 3501, 3500, '-mat', 8003, '-dir', 2, '-doRayleigh', 0, '-orient', 1, 0, 0, 0, 1, 0)
    ops.element('zeroLength', 3601, 3601, 3600, '-mat', 8004, '-dir', 2, '-doRayleigh', 0, '-orient', -1, 0, 0, 0, -1, 0)
    ops.fix(2001, 1, 1, 1, 1, 1, 1)
    ops.fix(1101, 1, 1, 1, 1, 1, 1)
    ops.fix(1201, 1, 1, 1, 1, 1, 1)
    ops.fix(1301, 1, 1, 1, 1, 1, 1)
    ops.fix(1401, 1, 1, 1, 1, 1, 1)
    ops.fix(1501, 1, 1, 1, 1, 1, 1)
    ops.fix(1601, 1, 1, 1, 1, 1, 1)
    ops.fix(1001, 1, 1, 1, 1, 1, 1)
    ops.fix(3101, 1, 1, 1, 1, 1, 1)
    ops.fix(3201, 1, 1, 1, 1, 1, 1)
    ops.fix(3301, 1, 1, 1, 1, 1, 1)
    ops.fix(3401, 1, 1, 1, 1, 1, 1)
    ops.fix(3501, 1, 1, 1, 1, 1, 1)
    ops.fix(3601, 1, 1, 1, 1, 1, 1)
    ops.fix(3001, 1, 1, 1, 1, 1, 1)
    ops.mass(101, 0.39460630748778475, 0.39460630748778475, 0.39460630748778475, 0.0, 0.0, 0.0)
    ops.mass(102, 0.39460630748778475, 0.39460630748778475, 0.39460630748778475, 0.0, 0.0, 0.0)
    ops.mass(103, 0.39460630748778475, 0.39460630748778475, 0.39460630748778475, 0.0, 0.0, 0.0)
    ops.mass(104, 0.39460630748778475, 0.39460630748778475, 0.39460630748778475, 0.0, 0.0, 0.0)
    ops.mass(105, 0.39460630748778475, 0.39460630748778475, 0.39460630748778475, 0.0, 0.0, 0.0)
    ops.mass(106, 0.39460630748778475, 0.39460630748778475, 0.39460630748778475, 0.0, 0.0, 0.0)
    ops.mass(107, 0.39460630748778475, 0.39460630748778475, 0.39460630748778475, 0.0, 0.0, 0.0)
    ops.mass(108, 0.39460630748778475, 0.39460630748778475, 0.39460630748778475, 0.0, 0.0, 0.0)
    ops.mass(109, 0.39460630748778475, 0.39460630748778475, 0.39460630748778475, 0.0, 0.0, 0.0)
    ops.mass(201, 0.4063812608517599, 0.4063812608517599, 0.4063812608517599, 0.0, 0.0, 0.0)
    ops.mass(202, 0.4063812608517599, 0.4063812608517599, 0.4063812608517599, 0.0, 0.0, 0.0)
    ops.mass(203, 0.4063812608517599, 0.4063812608517599, 0.4063812608517599, 0.0, 0.0, 0.0)
    ops.mass(204, 0.4063812608517599, 0.4063812608517599, 0.4063812608517599, 0.0, 0.0, 0.0)
    ops.mass(205, 0.4063812608517599, 0.4063812608517599, 0.4063812608517599, 0.0, 0.0, 0.0)
    ops.mass(206, 0.4063812608517599, 0.4063812608517599, 0.4063812608517599, 0.0, 0.0, 0.0)
    ops.mass(207, 0.4063812608517599, 0.4063812608517599, 0.4063812608517599, 0.0, 0.0, 0.0)
    ops.mass(208, 0.4063812608517599, 0.4063812608517599, 0.4063812608517599, 0.0, 0.0, 0.0)
    ops.mass(209, 0.4063812608517599, 0.4063812608517599, 0.4063812608517599, 0.0, 0.0, 0.0)
    ops.mass(100, 0.19730315374389237, 0.19730315374389237, 0.19730315374389237, 0.0, 0.0, 0.0)
    ops.mass(200, 0.4004937841697723, 0.4004937841697723, 0.4004937841697723, 0.0, 0.0, 0.0)
    ops.mass(300, 0.20319063042587995, 0.20319063042587995, 0.20319063042587995, 0.0, 0.0, 0.0)
    ops.mass(2001, 0.12400276371845813, 0.12400276371845813, 0.12400276371845813, 0.0, 0.0, 0.0)
    ops.mass(2002, 0.12400276371845813, 0.12400276371845813, 0.12400276371845813, 0.0, 0.0, 0.0)
    ops.timeSeries('Linear', 1)
    ops.pattern('Plain', 1, 1)
    ops.load(101, 0., 0., -152.47587721328003, 0., 0, 0)
    ops.load(102, 0., 0., -152.47587721328003, 0., 0, 0)
    ops.load(103, 0., 0., -152.47587721328003, 0., 0, 0)
    ops.load(104, 0., 0., -152.47587721328003, 0., 0, 0)
    ops.load(105, 0., 0., -152.47587721328003, 0., 0, 0)
    ops.load(106, 0., 0., -152.47587721328003, 0., 0, 0)
    ops.load(107, 0., 0., -152.47587721328003, 0., 0, 0)
    ops.load(108, 0., 0., -152.47587721328003, 0., 0, 0)
    ops.load(109, 0., 0., -152.47587721328003, 0., 0, 0)
    ops.load(201, 0., 0., -157.02571919312004, 0., 0, 0)
    ops.load(202, 0., 0., -157.02571919312004, 0., 0, 0)
    ops.load(203, 0., 0., -157.02571919312004, 0., 0, 0)
    ops.load(204, 0., 0., -157.02571919312004, 0., 0, 0)
    ops.load(205, 0., 0., -157.02571919312004, 0., 0, 0)
    ops.load(206, 0., 0., -157.02571919312004, 0., 0, 0)
    ops.load(207, 0., 0., -157.02571919312004, 0., 0, 0)
    ops.load(208, 0., 0., -157.02571919312004, 0., 0, 0)
    ops.load(209, 0., 0., -157.02571919312004, 0., 0, 0)
    ops.load(100, 0., 0., -76.23793860664001, 0., 0, 0)
    ops.load(200, 0., 0., -154.75079820320002, 0., 0., 0.)
    ops.load(300, 0., 0., -78.51285959656002, 0., 0., 0.)
    ops.load(2001, 0., 0., -47.914667900812226, 0., 0., 0.)
    ops.load(2002, 0., 0., -47.914667900812226, 0., 0., 0.)
    if model_input_dict['write_model_files']:
        primary_nodes_deck = np.array([100, 200, 300])
        np.savetxt(model_input_dict['model_info_directory'] + '/primary_nodes_deck.txt', primary_nodes_deck[np.newaxis, :], fmt='%d')


def analysis_gravity(model_input_dict):
    ops.test('EnergyIncr', 1e-20, 2000, 0)
    ops.algorithm('KrylovNewton')
    ops.integrator('LoadControl', 1/10.)
    ops.numberer('RCM')
    ops.constraints('Transformation')
    ops.system('ProfileSPD')
    ops.analysis('Static')
    ops.analyze(10)
    ops.loadConst('-time', 0.0)
    ops.wipeAnalysis()


def analysis_prelim(model_input_dict):
    modes = model_input_dict.get('modes')
    lam = ops.eigen(modes)
    periods = 2 * np.pi / np.sqrt(lam)
    np.savetxt(model_input_dict['model_info_directory'] + '/periods.txt', periods[np.newaxis, :])
    node_tags = ops.getNodeTags()
    for i_mode in range(1, modes + 1):
        mode_shape_file_lines = []
        for node in node_tags:
            line = [node] + ops.nodeEigenvector(node, i_mode)
            line_str = ' '.join([str(item) for item in line]) + '\n'
            mode_shape_file_lines.append(line_str)
        with open(model_input_dict['model_info_directory'] + f'/mode_shape_{i_mode}.txt', 'w') as fid:
            fid.writelines(mode_shape_file_lines)
    print("Modal Analysis COMPLETE!")
    ops.wipe()


def analysis_time_hist(model_input_dict):
    gm_file_loc = model_input_dict['gm_file_loc']
    gm_data_l = np.loadtxt(os.path.join(gm_file_loc, 'gm_1.txt'))
    gm_data_t = np.loadtxt(os.path.join(gm_file_loc, 'gm_2.txt'))
    gm_data_v = np.loadtxt(os.path.join(gm_file_loc, 'gm_3.txt'))

    gm_skew = 0.
    add_zeros_for = 1.

    npts_l = int(gm_data_l[0])
    npts_t = int(gm_data_t[0])
    npts_v = int(gm_data_v[0])

    dt_l = gm_data_l[1]
    dt_t = gm_data_t[1]
    dt_v = gm_data_v[1]

    gm_l = gm_data_l[2:] * np.cos(np.radians(gm_skew)) - gm_data_t[2:] * np.sin(np.radians(gm_skew))
    gm_t = gm_data_l[2:] * np.sin(np.radians(gm_skew)) + gm_data_t[2:] * np.cos(np.radians(gm_skew))
    gm_v = gm_data_v[2:]

    gm_l = np.hstack((gm_l, np.zeros(int(add_zeros_for/dt_l))))
    gm_t = np.hstack((gm_t, np.zeros(int(add_zeros_for/dt_t))))
    gm_v = np.hstack((gm_v, np.zeros(int(add_zeros_for/dt_v))))

    total_analysis_time = min(
        (npts_l + int(add_zeros_for/dt_l)) * dt_l,
        (npts_t + int(add_zeros_for/dt_t)) * dt_t,
        (npts_v + int(add_zeros_for/dt_v)) * dt_v
    )

    g = 386.4
    ops.timeSeries('Path', 2, '-dt', dt_l, '-values', *list(gm_l * -g))
    ops.timeSeries('Path', 3, '-dt', dt_t, '-values', *list(gm_t * g))
    if model_input_dict['model_attributes']['vertical_gm']:
        ops.timeSeries('Path', 4, '-dt', dt_v, '-values', *list(gm_v * g))

    ops.pattern('UniformExcitation', 2, 1, '-accel', 2)
    ops.pattern('UniformExcitation', 3, 2, '-accel', 3)
    if model_input_dict['model_attributes']['vertical_gm']:
        ops.pattern('UniformExcitation', 4, 3, '-accel', 4)

    ops.test('RelativeNormDispIncr', 1e-3, 500, 0)
    ops.algorithm('NewtonLineSearch')
    ops.integrator('Newmark', 0.5, 0.25)
    ops.numberer('RCM')
    ops.constraints('Transformation')
    ops.system('ProfileSPD')
    ops.analysis('VariableTransient', '-numSublevels', 10, '-numSubSteps', 5)
    dt_analysis = 0.001
    ok = ops.analyze(int(total_analysis_time / dt_analysis), dt_analysis)
    if ok == 0:
        print("NLTHA COMPLETE!")
        ok = True
    else:
        print("NLTHA FAILED!")
        ok = False
    ops.wipe()
    return ok
